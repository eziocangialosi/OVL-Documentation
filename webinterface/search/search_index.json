{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"User Documentation","text":"<p>If you're not looking for the web interface part you can navigate between all the repositories in the Project navigator.</p>"},{"location":"#requirement","title":"Requirement","text":"<ul> <li>Have already installed and configured the Api </li> <li>Have already installed the php version 8 and active in WebServer</li> </ul>"},{"location":"#installation","title":"Installation","text":"<ul> <li><code>wget https://github.com/eziocangialosi/OVL-WebInterface.git -O ovl-website.deb</code> - Install the Website.</li> <li><code>sudo dpkg -i ovl-website.deb</code> - Extract the Website.</li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>Go to website/php/initLink.php and adapts the links </p> <pre><code>&lt;?php\n    $API_link = \"https://example.com\";\n    $Website_link = \"https://example.com/\";\n?&gt;\n</code></pre>"},{"location":"#features","title":"Features","text":"<ul> <li>Connect to your account</li> <li>Access to your Trackers</li> <li>See the position of your Vehicule on a map</li> <li>See the last 20 positions of your Vehicule</li> <li>Download the history of your 20 last positions</li> <li>Have informations about the status of your trakers (Battery Charge, Online/Offline, alarm, ecomode, protection and charge)</li> <li>Modify some informations like actived or not the ecomode, the protection or the charge</li> </ul>"},{"location":"Developper/","title":"Developper Documentation","text":""},{"location":"Developper/#connection","title":"Connection","text":""},{"location":"Developper/#connectphp","title":"connect.php","text":""},{"location":"Developper/#use-for","title":"Use for","text":"<ul> <li>Declare the HTML document with a DOCTYPE and set the language attribute to \"en\".</li> <li>Define the head section, including meta tags, custom styles, and a title.</li> <li>Begin the body of the document.</li> <li>Include the header and connect templates.</li> <li>Define an associative array of messages and their corresponding CSS classes.</li> <li>Check if the 'connexion' GET parameter is set and if it exists in the messages array.</li> <li>Display the corresponding message and apply the appropriate CSS class if the condition is met.</li> <li>Close the message display condition.</li> <li>Include the footer template.</li> <li>Include the MDB (Material Design Bootstrap) JavaScript library.</li> <li>Close the body and HTML tags.</li> </ul>"},{"location":"Developper/#explanation","title":"Explanation","text":"<p>\u27a1\ufe0f This section is used to set up the HTML document structure and include necessary files.</p> <p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Connection&lt;/title&gt;\n&lt;link href=\"css/style.css\" rel=\"stylesheet\"&gt;\n&lt;link rel=\"stylesheet\" href=\"css/mdb.min.css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n</code></pre> \u27a1\ufe0f This code snippet is used to include the header and connect templates.</p> <p><pre><code>    &lt;?php \ninclude('template/header.php');\ninclude(\"template/connect.php\"); \n</code></pre> \u27a1\ufe0f This code snippet defines an array of messages and their corresponding CSS classes.</p> <p><pre><code>    // Define messages and their corresponding CSS classes\n    $messages = [\n        1 =&gt; ['message' =&gt; 'Wrong Password !', 'class' =&gt; 'alert-danger'],\n        2 =&gt; ['message' =&gt; 'Wrong Email !', 'class' =&gt; 'alert-danger'],\n        3 =&gt; ['message' =&gt; 'Successfully disconnect !', 'class' =&gt; 'alert-success'],\n        4 =&gt; ['message' =&gt; 'API Connection Lost !', 'class' =&gt; 'alert-danger'],\n    ];\n</code></pre> \u27a1\ufe0f This code snippet is used to display a message if it exists based on the 'connexion' GET parameter.</p> <p><pre><code>    // Display the message if it exists\n    if (isset($_GET['connexion']) &amp;&amp; isset($messages[$_GET['connexion']])) {\n        $message = $messages[$_GET['connexion']];\n    ?&gt;\n        &lt;div class=\"alert &lt;?php echo $message['class']; ?&gt; mt-4 mb-4 alert_test alert-dismissible\" role=\"alert\"&gt;\n&lt;?php echo $message['message']; ?&gt;\n            &lt;a href=\"#\" class=\"close\" data-dismiss=\"alert\" style=\"margin-left: 20px; margin-right: 20px\" aria-label=\"close\"&gt;&lt;i class=\"fa-solid fa-xmark\"&gt;&lt;/i&gt;&lt;/a&gt;\n        &lt;/div&gt;\n&lt;?php\n}\n</code></pre> \u27a1\ufe0f This code snippet is used to include the footer template and load the JavaScript file.</p> <pre><code>    include('template/footer.php');\n    ?&gt; \n    &lt;script type=\"text/javascript\" src=\"js/mdb.min.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Developper/#templateconnectphp","title":"template/connect.php","text":""},{"location":"Developper/#use-for_1","title":"Use for","text":"<ul> <li>Create a centered background color section using the <code>&lt;section&gt;</code> element with a \"text-center\" class.</li> <li>Add a background image with a custom style, setting the background color and height.</li> <li>Create a design block for the login form using a <code>&lt;div&gt;</code> element with a card and other styling classes.<ul> <li>Apply custom styles for the card, such as margin, background color, backdrop filter, and maximum width.</li> </ul> </li> <li>Add a card body with a form inside.<ul> <li>Use a <code>&lt;div&gt;</code> element with a \"card-body\" class and apply padding styles.</li> </ul> </li> <li>Create a row with centered content using \"d-flex\" and \"justify-content-center\" classes.</li> <li>Add the login form inside a <code>&lt;div&gt;</code> element.<ul> <li>Set the column width for large screens to 8.</li> </ul> </li> <li>Add a form header with a bold \"Login\" title.</li> <li>Create the form with an action pointing to \"php/verifyConnect.php\" and a POST method.<ul> <li>Add an email input field with validation error.<ul> <li>Use a \"form-outline\" class and apply margin styles.</li> </ul> </li> <li>Add a password input field with validation error.<ul> <li>Use a \"form-outline\" class and apply margin styles.</li> </ul> </li> </ul> </li> <li>Add a submit button with Bootstrap classes and custom styles.</li> <li>Close all the HTML elements.</li> </ul>"},{"location":"Developper/#explanation_1","title":"Explanation","text":"<p>\u27a1\ufe0f This section is use for center the text</p> <pre><code>&lt;!-- Background color section--&gt;\n&lt;section class=\"text-center\"&gt;\n</code></pre> <p>\u27a1\ufe0f This div is use for add an background color <pre><code>  &lt;!-- Background image --&gt;\n&lt;div class=\"p-5 bg-image\" style=\"\n        background-color: #647295;\n        height: 300px;\n        \"&gt;&lt;/div&gt;\n</code></pre></p> <p>\u27a1\ufe0f this code snippet allows you to position the form <pre><code>  &lt;!-- Design block for the login form --&gt;\n&lt;div class=\"card mx-4 mb-5 mx-md-auto shadow-5-strong\" style=\"\n        margin-top: -100px;\n        background: hsla(0, 0%, 100%, 0.8);\n        backdrop-filter: blur(30px);\n        max-width: 900px;\n        \"&gt;\n&lt;!--Card body with form --&gt;\n&lt;div class=\"card-body py-5 px-md-5 card_modify\"&gt;\n&lt;div class=\"row d-flex justify-content-center\"&gt;\n&lt;!-- Login form --&gt;\n&lt;div class=\"col-lg-8\"&gt;\n</code></pre></p> <p>\u27a1\ufe0f this html tag use for position... the form title <pre><code>&lt;!-- Form header --&gt;\n&lt;h2 class=\"fw-bold mb-5\"&gt;Login&lt;/h2&gt;\n</code></pre></p> <p>\u27a1\ufe0f this form tag redirect the informations of the form to the php/verifyConnect.php using the method POST <pre><code>&lt;form  action=\"php/verifyConnect.php\" method=\"POST\"&gt;\n</code></pre></p> <p>\u27a1\ufe0f this code snippet is an input in the form use for enter an email adress. This input verify if the email adress is corect. If the email is not in the database the input will be red  <pre><code>&lt;!-- Email input field with validation error--&gt;\n&lt;div class=\"form-outline mb-4\"&gt;\n&lt;input type=\"email\" id=\"form3Example3\" class=\"form-control &lt;!-- PHP code to check if the connexion is valid, if not then show error message. --&gt; &lt;?php if([\"connexion\"] == 2){ ?&gt; is-invalid &lt;?php } ?&gt;\" name=\"email\" required/&gt;\n        &lt;label class=\"form-label\" for=\"form3Example3\"&gt;Email&lt;/label&gt;\n&lt;/div&gt;\n</code></pre></p> <p>\u27a1\ufe0f This one is the same but for the password <pre><code>&lt;!-- Password input field with validation error--&gt;\n&lt;div class=\"form-outline mb-4\"&gt;\n&lt;input type=\"password\" id=\"form3Example4\" class=\"form-control &lt;!-- PHP code to check if the connexion is valid, if not then show error message. --&gt; &lt;?php if([\"connexion\"] == 1){ ?&gt; is-invalid &lt;?php } ?&gt;\" name=\"password\" required/&gt;\n        &lt;label class=\"form-label\" for=\"form3Example4\"&gt;Password&lt;/label&gt;\n&lt;/div&gt;\n</code></pre></p> <p>\u27a1\ufe0f This is just the submit button <pre><code>    &lt;!-- Submit button --&gt;\n&lt;button type=\"submit\" class=\"btn btn-primary btn-primary btn-block mb-4 button_modify\"&gt;\n        Login\n    &lt;/button&gt;\n</code></pre></p>"},{"location":"Developper/#phpverifyconnectphp","title":"php/verifyConnect.php","text":""},{"location":"Developper/#use-for_2","title":"Use for","text":"<ul> <li><code>if (isset($_POST['email']) &amp;&amp; isset($_POST['password'])) {</code> - Verify if the user complete the form</li> <li><code>$users_verif = file_get_contents($API_link .\"/user/\" . $email . \"/\" . $mdp);</code> - Get informations about the user using the API request</li> <li><code>if($users_verif != \"\")</code> - Verify if the user exist in the database</li> <li><code>if ($parsed_users_verif-&gt;{'error'}-&gt;{'Code'} == \"0\") {</code> - Check that the error code is returned by the Api</li> <li><code>header('Location: https://exemple.com/iotList.php?connexion=0');</code> - Redirects to a page based on the Api response</li> </ul>"},{"location":"Developper/#explanation_2","title":"Explanation","text":"<p>\u27a1\ufe0f The script starts a new session and includes the initLink.php file</p> <pre><code>session_start();\ninclude 'initLink.php';\n</code></pre> <p>\u27a1\ufe0f The script checks if email and password are set in the POST request</p> <p><pre><code>if (isset($_POST['email']) &amp;&amp; isset($_POST['password'])) {\n    $email = $_POST['email'];\n    $mdp = $_POST['password'];\n</code></pre> \u27a1\ufe0f The script fetches user data from the API using email and password</p> <p><pre><code>$users_verif = file_get_contents($API_link .\"/user/\" . $email . \"/\" . $mdp);\n$parsed_users_verif = json_decode($users_verif);\n</code></pre> \u27a1\ufe0f The script prints the raw response data</p> <pre><code>echo $users_verif;\n</code></pre> <p>\u27a1\ufe0f The script checks if the response is not empty</p> <pre><code>if($users_verif != \"\") {\n</code></pre> <p>\u27a1\ufe0f The script checks the response status code and handles it accordingly</p> <ul> <li>If the status code is 0 (successful login), it sets the session variables and redirects to iotList.php</li> <li>If the status code is 30 (wrong password), it unsets the user session and redirects to connect.php with a flag for wrong password</li> <li>If the status code is 32 (non-registered user), it unsets the user session and redirects to connect.php with a flag for non-registered user</li> </ul> <pre><code>if ($parsed_users_verif-&gt;{'error'}-&gt;{'Code'} == \"0\") {\n    unset($_SESSION[\"Connexion\"]);\n    $_SESSION[\"user\"][\"time\"] = time();\n    $_SESSION[\"user\"][\"token\"] = $parsed_users_verif-&gt;{'user'};\n    header('Location: https://exemple.com/iotList.php?connexion=0');\n} elseif ($parsed_users_verif-&gt;{'error'}-&gt;{'Code'} == \"30\") {\n    unset($_SESSION[\"user\"]);\n    header('Location: https://exemple.com/connect.php?connexion=1');\n} elseif ($parsed_users_verif-&gt;{'error'}-&gt;{'Code'} == \"32\") {\n    unset($_SESSION[\"user\"]);\n    header('Location: https://exemple.com/connect.php?connexion=2');\n}\n</code></pre> <p>\u27a1\ufe0f If the response is empty, the script redirects to connect.php with a flag for API connection lost</p> <pre><code>} else {\n    header('Location: https://exemple.com/connect.php?connexion=4');\n}\n</code></pre>"},{"location":"Developper/#iot-list","title":"IOT List","text":""},{"location":"Developper/#iotlistphp","title":"iotList.php","text":""},{"location":"Developper/#using-for","title":"Using for","text":"<ul> <li>Declare the HTML document with a DOCTYPE and set the language attribute to \"en\".</li> <li>Define the head section, including meta tags, custom styles, and a title.</li> <li>Begin the body of the document.</li> <li>Include the header template.</li> <li>Check if a user session is set and display content accordingly.</li> <li>Display a centered title \"Trackers List\".</li> <li>Include the IoTArray template.</li> <li>Display a success message if the 'connexion' GET parameter is set.</li> <li>Close the content display condition when a user session is set.</li> <li>Include the footer template.</li> <li>Close the body and HTML tags.</li> </ul>"},{"location":"Developper/#explanation_3","title":"Explanation","text":"<p>\u27a1\ufe0f The HTML document is declared with a DOCTYPE and a lang attribute set to \"en\"</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n</code></pre> <p>\u27a1\ufe0f The head section includes meta tags, custom styles, and a title</p> <pre><code>&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;!-- Custom styles --&gt;\n&lt;link href=\"css/style.css\" rel=\"stylesheet\"&gt;\n&lt;link rel=\"stylesheet\" href=\"css/mdb.min.css\" /&gt;\n&lt;title&gt;Trackers&lt;/title&gt;\n&lt;/head&gt;\n</code></pre> <p>\u27a1\ufe0f The body of the document begins</p> <pre><code>&lt;body&gt;\n</code></pre> <p>\u27a1\ufe0f The header template is included</p> <pre><code>    &lt;?php\n// Include header template\ninclude('template/header.php');\n?&gt;\n</code></pre> <p>\u27a1\ufe0f The content is displayed if a user session is set</p> <pre><code>    &lt;?php if (isset($_SESSION['user'])) { ?&gt;\n</code></pre> <p>\u27a1\ufe0f A centered title \"Trackers List\" is displayed</p> <p><pre><code>    &lt;br&gt;\n&lt;h1 style=\"text-align: center\"&gt;Trackers List&lt;/h1&gt;\n</code></pre> \u27a1\ufe0f The IoTArray template is included</p> <p><pre><code>        &lt;?php\n// Include IoTArray template\ninclude('template/IotArray.php');\n</code></pre> \u27a1\ufe0f A success message is displayed if the 'connexion' GET parameter is set</p> <pre><code>            // Display success message if 'connexion' is set\n            if (isset($_GET['connexion'])) {\n        ?&gt;\n                &lt;div class=\"alert alert-success mt-4 mb-4 alert_test alert-dismissible\" role=\"alert\"&gt;\n                    Login Successfully !\n                    &lt;a href=\"#\" class=\"close\" data-dismiss=\"alert\" style=\"margin-left: 20px; margin-right: 20px\" aria-label=\"close\"&gt;&lt;i class=\"fa-solid fa-xmark\"&gt;&lt;/i&gt;&lt;/a&gt;\n                &lt;/div&gt;\n&lt;?php \n} \n?&gt;\n</code></pre> <p>\u27a1\ufe0f The content is closed if a user session is set</p> <p><pre><code>    &lt;?php\n}\n</code></pre> \u27a1\ufe0f The footer template is included</p> <p><pre><code>        // Include footer template\n        include('template/footer.php');\n    ?&gt;\n</code></pre> \u27a1\ufe0f The body and HTML tags are closed</p> <pre><code>&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Developper/#templateiotarrayphp","title":"template/iotArray.php","text":""},{"location":"Developper/#using-for_1","title":"Using for","text":"<ul> <li>Declare the HTML document with a DOCTYPE and set the language attribute to \"en\".</li> <li>Define the head section, including meta tags, custom styles, and a title.</li> <li>Begin the body of the document.</li> <li>Include the header template.</li> <li>Check if a user session is set and display content accordingly.<ul> <li>Fetch status and IoT data from a remote server.</li> <li>Decode the JSON data into arrays.</li> <li>Check if there are no errors in the fetched IoT list.<ul> <li>Create an HTML table to display IoT devices and their information.</li> <li>Loop through the IoT devices and create a table row for each one.<ul> <li>Display the IoT device data in the table row, including its online status.</li> <li>Fetch historical data for the current IoT device and display it, or display \"NaN\" if not available.</li> </ul> </li> <li>Close the loop.</li> <li>Close the HTML table.</li> </ul> </li> <li>Display an error message if there are errors in the fetched IoT list.</li> </ul> </li> <li>Display a success message if the 'connexion' GET parameter is set.</li> <li>Close the content display condition when a user session is set.</li> <li>Include the footer template.</li> <li>Close the body and HTML tags.</li> </ul>"},{"location":"Developper/#explanation_4","title":"Explanation","text":"<p>\u27a1\ufe0f This code snippet fetches status and IoT data from a remote server and stores them in variables.</p> <p><pre><code>$status_list = file_get_contents($API_link .\"/status_list/\" . $_SESSION[\"user\"][\"token\"]);\n$iot_list = file_get_contents($API_link .\"/iot_list/\" . $_SESSION[\"user\"][\"token\"]);\n</code></pre> \u27a1\ufe0f This code snippet decodes the fetched JSON data into arrays.</p> <p><pre><code>$parsed_status_list = json_decode($status_list);\n$parsed_iot_list = json_decode($iot_list);\n$extract_iot_list = $parsed_iot_list-&gt;{'trackers'}-&gt;{'iotArray'};\n</code></pre> \u27a1\ufe0f This code checks if there are no errors in the fetched IoT list.</p> <p><pre><code>if ($parsed_iot_list-&gt;{'error'}-&gt;{'Code'} == 0) {\n</code></pre> \u27a1\ufe0f This code snippet creates the start of an HTML table.</p> <p><pre><code>    echo \"&lt;br&gt;\";\n    echo \"&lt;div class='table-responsive'&gt;\";\n    echo \"&lt;table class='table table_modify table-responsive container-xxl mt-5 mb-5'&gt;\";\n    echo     \"&lt;thead class='table-dark table_modify'&gt;\";\n    echo         \"&lt;th scope='col'&gt;#&lt;/th&gt;\";\n    echo         \"&lt;th scope='col'&gt;Name&lt;/th&gt;\";\n    echo         \"&lt;th scope='col'&gt;Status&lt;/th&gt;\";\n    echo         \"&lt;th scope='col'&gt;PosX&lt;/th&gt;\";\n    echo         \"&lt;th scope='col'&gt;PosY&lt;/th&gt;\";\n    echo         \"&lt;th scope='col'&gt;&lt;/th&gt;\";\n    echo     \"&lt;/thead&gt;\";\n    echo     \"&lt;tbody&gt;\";\n</code></pre> \u27a1\ufe0f This code snippet loops through the IoT devices and creates a table row for each one.</p> <p><pre><code>    for ($i = 0; $i &lt; count($extract_iot_list); $i++) {\n        $id = $i + 1;\n</code></pre> \u27a1\ufe0f This code snippet displays the IoT device data in the table row.</p> <p><pre><code>        echo \"&lt;tr&gt;\";\n        echo \"&lt;th scope='row'&gt;\", $parsed_iot_list-&gt;{'trackers'}-&gt;{'iotArray'}[$i]-&gt;{'id'}, \"&lt;/th&gt;\";\n        echo \"&lt;td&gt;\", $parsed_iot_list-&gt;{'trackers'}-&gt;{'iotArray'}[$i]-&gt;{'trackerName'},  \"&lt;/td&gt;\";\n</code></pre> \u27a1\ufe0f This code snippet checks the online status of the IoT device and displays it.</p> <p><pre><code>        if ($parsed_status_list-&gt;{'status_list'}[$id - 1]-&gt;{'status_online'} == 1) {\n            echo \"&lt;td&gt;&lt;i class='fa-solid fa-check'&gt;&lt;/i&gt; Online !&lt;/td&gt;\";\n        } else {\n            echo \"&lt;td&gt;&lt;i class='fa-solid fa-xmark'&gt;&lt;/i&gt; Offline !&lt;/td&gt;\";\n        }\n</code></pre> \u27a1\ufe0f This code snippet fetches historical data for the current IoT device and displays it.</p> <pre><code>        $history = file_get_contents($API_link .\"/position/history/\" . $id . \"/\");\n        $parsed_history = json_decode($history);\n        if ($parsed_history-&gt;{'error'}-&gt;{'Code'} == 0) {\n            echo \"&lt;td&gt;\", end($parsed_history-&gt;{'history'})-&gt;{'lat'}, \"&lt;/td&gt;\";\n            echo \"&lt;td&gt;\", end($parsed_history-&gt;{'history'})-&gt;{'lon'}, \"&lt;/td&gt;\";\n            echo \"&lt;td&gt;&lt;a href='historique.php?iot=\", ($i + 1),  \"'&gt;\",\n            \"&lt;button type='button' class='btn button_modify'&gt;  See \",\n            \"&lt;/button&gt;&lt;/a&gt;&lt;/td&gt;\";\n            echo \"&lt;/tr&gt;\";\n        } else {\n            echo \"&lt;td&gt; NaN &lt;/td&gt;\";\n            echo \"&lt;td&gt; NaN &lt;/td&gt;\";\n            echo \"&lt;td&gt;&lt;button type='button' class='btn button_modify' disabled\n</code></pre>"},{"location":"Developper/#position-history","title":"Position History","text":""},{"location":"Developper/#historiquephp","title":"historique.php","text":""},{"location":"Developper/#using-for_2","title":"Using for","text":"<ul> <li>Declare and retrieve GET parameters \"iot\" and \"pos\".</li> <li>Define the HTML document with a DOCTYPE and set the language attribute to \"en\".</li> <li>Define the head section, including meta tags, styles, and scripts for Leaflet and Bootstrap, and a title.</li> <li>Begin the body of the document.</li> <li>Include the header template.</li> <li>Fetch position history from the API and decode the JSON data.</li> <li>Check if a user session is set and display content accordingly.<ul> <li>Display a centered title \"Position History\".</li> <li>Check if there are no errors in the fetched position history.<ul> <li>Create a row with two columns for displaying the map and position array.<ul> <li>In the first column, include a div element for the map.</li> <li>In the second column, include the PositionArray template.</li> </ul> </li> </ul> </li> <li>Close the content display condition when there are no errors in the fetched position history.</li> <li>Include the param and map templates.</li> </ul> </li> <li>Close the content display condition when a user session is set.</li> <li>Display an error message if there are errors in the fetched position history.</li> <li>Include the footer template.</li> <li>Close the body and HTML tags.</li> </ul>"},{"location":"Developper/#explanation_5","title":"Explanation","text":"<p>\u27a1\ufe0f Retrieve and store GET parameters \"iot\" and \"pos\".</p> <p><pre><code>&lt;?php\n$iot = $_GET[\"iot\"];\n$pos = $_GET[\"pos\"];\n?&gt;\n</code></pre> \u27a1\ufe0f Define the HTML document with a DOCTYPE and set the language attribute to \"en\".</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n</code></pre> <p>\u27a1\ufe0f Define the head section, including meta tags, styles, and scripts for Leaflet and Bootstrap, and a title.</p> <pre><code>&lt;head&gt;\n    ...\n&lt;/head&gt;\n</code></pre> <p>\u27a1\ufe0f Begin the body of the document and include the header template.</p> <pre><code>&lt;body&gt;\n&lt;?php\n    include('template/header.php');\n    ...\n?&gt;\n</code></pre> <p>\u27a1\ufe0f Fetch position history from the API and decode the JSON data.</p> <pre><code>    // Get position history from the API\n    $history = file_get_contents($API_link .\"/position/history/\" . $iot . \"/\");\n    $parsed_history = json_decode($history);\n</code></pre> <p>\u27a1\ufe0f Check if a user session is set and display content accordingly.</p> <p><pre><code>    &lt;?php if (isset($_SESSION['user'])) { ?&gt;\n        ...\n&lt;?php } else {\necho $parsed_history-&gt;{'error'}-&gt;{'Message'};\n}\n?&gt;\n</code></pre> \u27a1\ufe0f Display a centered title \"Position History\".</p> <pre><code>        &lt;h1 style=\"text-align: center\"&gt;Position History&lt;/h1&gt;\n</code></pre> <p>\u27a1\ufe0f Check if there are no errors in the fetched position history and create a row with two columns for displaying the map and position array.</p> <pre><code>        &lt;?php if ($parsed_history-&gt;{'error'}-&gt;{'Code'} == 0) { ?&gt;\n            &lt;div class=\"row mb-5 history\"&gt;\n                ...\n            &lt;/div&gt;\n&lt;?php\n}\n</code></pre> <p>\u27a1\ufe0f In the first column, include a div element for the map.</p> <pre><code>                &lt;div class=\"col mt-5\"&gt;\n&lt;div class=\"img-fluid\"&gt;\n&lt;div id=\"map\" style=\"min-height: 700px\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>\u27a1\ufe0f In the second column, include the PositionArray template.</p> <pre><code>                &lt;div class=\"col mt-5\"&gt;\n&lt;?php include('template/PositionArray.php'); ?&gt;\n&lt;/div&gt;\n</code></pre> <p>\u27a1\ufe0f Include the param and map templates.</p> <pre><code>        include('template/param.php');\n        include('template/map.php');\n</code></pre> <p>\u27a1\ufe0f Display an error message if there are errors in the fetched position history.</p> <pre><code>    } else {\n        echo $parsed_history-&gt;{'error'}-&gt;{'Message'};\n    }\n</code></pre> <p>\u27a1\ufe0f Include the footer template and close the body and HTML tags.</p> <pre><code>    include('template/footer.php');\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Developper/#templatepositionarrayphp","title":"template/PositionArray.php","text":""},{"location":"Developper/#using-for_3","title":"Using for","text":"<ul> <li>Declare and retrieve GET parameters \"iot\" and \"pos\".</li> <li>Define the HTML document with a DOCTYPE and set the language attribute to \"en\".</li> <li>Define the head section, including meta tags, styles, and scripts for Leaflet and Bootstrap, and a title.</li> <li>Begin the body of the document.</li> <li>Include the header template.</li> <li>Fetch position history from the API and decode the JSON data.</li> <li>Check if a user session is set and display content accordingly.<ul> <li>Display a centered title \"Position History\".</li> <li>Check if there are no errors in the fetched position history.<ul> <li>Create a row with two columns for displaying the map and position array.<ul> <li>In the first column, include a div element for the map.</li> <li>In the second column, include the PositionArray template.</li> </ul> </li> <li>Close the content display condition when there are no errors in the fetched position history.</li> <li>Include the param and map templates.</li> </ul> </li> <li>Close the content display condition when a user session is set.</li> </ul> </li> <li>Display an error message if there are errors in the fetched position history.</li> <li>Include the footer template.</li> <li>Close the body and HTML tags.</li> </ul>"},{"location":"Developper/#explanation_6","title":"Explanation","text":"<p>\u27a1\ufe0f Check if there are no errors in the fetched position history.</p> <p><pre><code>&lt;?php\nif ($parsed_history-&gt;{'error'}-&gt;{'Code'} == 0) {\n...\n} else {\necho $parsed_history-&gt;{'error'}-&gt;{'Message'};\n}\n?&gt;\n</code></pre> \u27a1\ufe0f Retrieve and store GET parameters \"iot\" and \"pos\" and fetch safezone data from the API, then store its latitude and longitude in cookies.</p> <p><pre><code>    // Get the iot device's key from the URL\n    $iot = $_GET[\"iot\"];\n    $pos = $_GET[\"pos\"];\n    $safezone = file_get_contents($API_link . \"/position/safezone/\" . $iot . \"/\");\n    $safezone_Json = json_decode($safezone);\n    $_COOKIE['safezone']['lat'] = $safezone_Json-&gt;{'safezone'}-&gt;{'lat'};\n    $_COOKIE['safezone']['lon'] = $safezone_Json-&gt;{'safezone'}-&gt;{'lon'};\n</code></pre> \u27a1\ufe0f Extract position history data from the decoded JSON data.</p> <p><pre><code>    $extract_pos = json_decode($history)-&gt;{'history'};\n</code></pre> \u27a1\ufe0f Create a responsive Bootstrap table with a custom scrollbar.</p> <p><pre><code>    &lt;div class=\"table-responsive table-wrapper-scroll-y my-custom-scrollbar\"&gt;\n&lt;table class=\"table table_modify container-xxl\"&gt;\n            ...\n        &lt;/table&gt;\n&lt;/div&gt;\n</code></pre> \u27a1\ufe0f Define table headers for date, latitude, longitude, and an empty header for a button.</p> <p><pre><code>            &lt;thead class=\"table-dark table_modify\"&gt;\n&lt;th scope=\"col\"&gt;Date&lt;/th&gt;\n&lt;th scope=\"col\"&gt;Latitude&lt;/th&gt;\n&lt;th scope=\"col\"&gt;Longitude&lt;/th&gt;\n&lt;th scope=\"col\"&gt;&lt;/th&gt;\n&lt;/thead&gt;\n</code></pre> \u27a1\ufe0f Loop through the history data in reverse order and create table rows with extracted information.</p> <p><pre><code>            &lt;tbody&gt;\n&lt;?php\n// Loop through the history data and create table rows\nfor ($i = count($extract_pos); $i &gt; 0; $i--) {\n?&gt;\n                    ...\n&lt;?php\n}\n?&gt;\n            &lt;/tbody&gt;\n</code></pre> \u27a1\ufe0f For each table row, display date, latitude, longitude, and a \"See\" button linking to the \"historique.php\" page with \"iot\" and \"pos\" parameters.</p> <p><pre><code>                    &lt;tr&gt;\n&lt;td&gt; ... &lt;/td&gt;\n&lt;td&gt; ... &lt;/td&gt;\n&lt;td&gt; ... &lt;/td&gt;\n&lt;td&gt; &lt;a href=\"/historique.php?iot=&lt;?php echo $iot ?&gt;&amp;pos=&lt;?php echo $i - 1 ?&gt;\"&gt; &lt;button type=\"button\" class=\"btn button_modify\"&gt; See &lt;/button&gt; &lt;/a&gt; &lt;/td&gt;\n&lt;/tr&gt;\n</code></pre> \u27a1\ufe0f Add \"Global\" and \"Exporter\" buttons below the table, both linking to the \"historique.php\" page with the \"iot\" parameter.</p> <p><pre><code>    &lt;!-- \"Global\" and \"Exporter\" buttons --&gt;\n&lt;a href=\"/historique.php?iot=&lt;?php echo $iot ?&gt;\"&gt; &lt;button type=\"button\" class=\"btn button_modify\"&gt; Global &lt;/button&gt; &lt;/a&gt;\n&lt;a href=\"php/download.php?iot=&lt;?php echo $iot ?&gt;\"&gt; &lt;button type=\"button\" class=\"btn button_modify\"&gt; Export &lt;/button&gt; &lt;/a&gt;\n</code></pre> \u27a1\ufe0f Display an error message if there are errors in the fetched position history.</p> <pre><code>} else {\n    echo $parsed_history-&gt;{'error'}-&gt;{'Message'};\n}\n</code></pre>"}]}